plugin.tx_schulungen {
	settings {
		view {
			templateRootPath = {$plugin.tx_schulungen.view.templateRootPath}
			partialRootPath = {$plugin.tx_schulungen.view.partialRootPath}
			layoutRootPath = {$plugin.tx_schulungen.view.layoutRootPath}
		}

		mail {
			fromMail = {$plugin.tx_schulungen.mail.fromMail}
			fromName = {$plugin.tx_schulungen.mail.fromName}
		}
	}

	persistence {
		enableAutomaticCacheClearing = 1
		storagePid = {$plugin.tx_schulungen.persistence.storagePid}
		classes {
			Subugoe\Schulungen\Domain\Model\Person {
				mapping {
					tableName = tt_address
					recordType = Tx_Schulungen_Domain_Model_Person
					columns {
						first_name = firstName
						last_name = lastName
						title = title
						email = email
						phone = phone
						fax = fax
						address = address
						building = building
						room = room
						company = company
						city = city
						zip = zip
						country = country
					}
				}
			}

			Subugoe\Schulungen\Domain\Model\Group {
				mapping {
					tableName = tt_address_group
					recordType = Tx_Schulungen_Domain_Model_Group
					columns {
						title = title
					}
				}
			}
		}
	}

	useCacheHash = 1
}

module.tx_schulungen {
	persistence {
		enableAutomaticCacheClearing = 1
		storagePid = {$plugin.tx_schulungen.persistence.storagePid}
		classes < plugin.tx_schulungen.persistence.classes
	}

	view {
		templateRootPath = {$plugin.tx_schulungen.view.templateRootPath}
		partialRootPath = {$plugin.tx_schulungen.view.partialRootPath}
		layoutRootPath = {$plugin.tx_schulungen.view.layoutRootPath}
	}

	mail {
		fromMail = {$plugin.tx_schulungen.mail.fromMail}
		fromName = {$plugin.tx_schulungen.mail.fromName}
	}
}

plugin.tx_jmrecaptcha {
	public_key = {$plugin.tx_jmrecaptcha.public_key}
	private_key = {$plugin.tx_jmrecaptcha.private_key}
	theme = {$plugin.tx_jmrecaptcha.theme}
}

lib.tx_schulungen.pathSegmentTitle = TEXT
lib.tx_schulungen.pathSegmentTitle {
	dataWrap = DB:tx_schulungen_domain_model_schulung:{GP:tx_schulungen_schulungen|schulung}:titel
	wrap3 = {|}
	insertData = 1
}

lib.tx_schulungen_teilnehmer.pathSegmentTitle = COA
lib.tx_schulungen_teilnehmer.pathSegmentTitle {
	10 = TEXT
	10 {
		dataWrap = DB:tx_schulungen_domain_model_termin:{GP:tx_schulungen_schulungen|termin}:startzeit
		wrap3 = {|}
		insertData = 1
	}

	stdWrap.strftime = %A, %d. %B %Y - %H:%M Uhr
}

ics = PAGE
ics {
	typeNum = 1316011668
	10 =< tt_content.list.20.schulungen_calendar

	config {
		disableAllHeaderCode = 1

		additionalHeaders = Expires: 0
		additionalHeaders = Cache-Control: must-revalidate, post-check=0, pre-check=0
		additionalHeaders = Content-type: text/calendar
		additionalHeaders = Content-Disposition: attachment; filename=termin.ics

		xhtml_cleaning = 0
		admPanel = 0
	}
}

csv = PAGE
csv {
	typeNum = 1321464620
	10 =< tt_content.list.20.schulungen_csvexport

	config {
		disableAllHeaderCode = 1

		additionalHeaders = Expires: 0
		additionalHeaders = Cache-Control: must-revalidate, post-check=0, pre-check=0
		additionalHeaders = Content-type: text/csv
		additionalHeaders = Content-Disposition: attachment; filename=export.csv

		xhtml_cleaning = 0
		admPanel = 0
	}
}
